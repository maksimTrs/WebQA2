name: Smoke Tests

on:
  push:
    branches: [ main, master, dev* ]
  workflow_dispatch:

jobs:
  api-tests:
    name: API Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        id: gradle-cache
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Run API Tests
        id: run-api-tests
        run: ./gradlew test --tests com.webqa.tests.api.SignUpAPITest --tests com.webqa.tests.api.ProductApiTest
        #continue-on-error: true

      - name: Generate Allure Results
        if: failure() && steps.run-api-tests.outcome != 'success'
        run: ./gradlew allureReport

      - name: Allure Report action
        if: failure() && steps.run-api-tests.outcome != 'success'
        uses: simple-elf/allure-report-action@master
        with:
          allure_results: build/allure-results
          allure_history: allure-history
          keep_reports: 3

      - name: Upload Allure Report
        if: failure() && steps.run-api-tests.outcome != 'success'
        uses: actions/upload-artifact@v4
        with:
          name: api-allure-report
          path: allure-report

  ui-tests:
    name: UI Tests
    needs: api-tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        id: gradle-cache
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Start Selenium Grid
        run: docker-compose up -d selenium-hub chrome

      - name: Wait for Selenium Grid to be ready
        run: |
          echo "Waiting for Selenium Grid to be ready..."
          timeout=60
          while [ $timeout -gt 0 ]; do
            if curl -sSL "http://localhost:4444/wd/hub/status" | grep -q "\"ready\":true"; then
              echo "Selenium Grid is ready!"
              break
            fi
            echo "Waiting for Selenium Grid... ($timeout seconds left)"
            sleep 5
            timeout=$((timeout - 5))
          done
          if [ $timeout -le 0 ]; then
            echo "Timed out waiting for Selenium Grid"
            exit 1
          fi

      - name: Run UI Tests
        id: run-ui-tests
        run: ./gradlew test --tests com.webqa.tests.ui.LoginTest --tests com.webqa.tests.ui.SignUpUITest -Dremote=true
        #continue-on-error: true

      - name: Generate Allure Results
        if: failure() && steps.run-ui-tests.outcome != 'success'
        run: ./gradlew allureReport

      - name: Allure Report action
        if: failure() && steps.run-ui-tests.outcome != 'success'
        uses: simple-elf/allure-report-action@master
        with:
          allure_results: build/allure-results
          allure_history: allure-history
          keep_reports: 20

      - name: Upload Allure Report
        if: failure() && steps.run-ui-tests.outcome != 'success'
        uses: actions/upload-artifact@v4
        with:
          name: ui-allure-report
          path: allure-report

      - name: Stop Selenium Grid
        if: always()
        run: docker-compose down
