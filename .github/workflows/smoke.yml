name: Smoke Tests

on:
  push:
    branches: [ main, master, dev* ]
  workflow_dispatch:

jobs:
  api-tests:
    name: API Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        id: gradle-cache
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Run API Tests
        id: run-api-tests
        run: ./gradlew test --tests com.webqa.tests.api.SignUpAPITest
        #continue-on-error: true

      - name: Upload Build Directory
        if: failure() && steps.run-api-tests.outcome != 'success'
        uses: actions/upload-artifact@v4
        with:
          name: api-build-directory
          path: build

  ui-tests:
    name: UI Tests
    needs: api-tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        id: gradle-cache
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      # Используем GitHub Actions встроенное кеширование вместо устаревшего сервиса
      # - name: Cache Docker images
      #   uses: actions/cache@v4
      #   with:
      #     path: /tmp/docker-images
      #     key: docker-${{ runner.os }}-${{ hashFiles('docker-compose.yml') }}

      - name: Start Selenium Grid
        run: docker compose up -d selenium-hub chrome

      - name: Check Docker containers
        run: |
          echo "Checking Docker containers..."
          docker ps
          docker logs selenium-hub
          docker logs $(docker ps -q --filter "name=chrome")

      - name: Wait for Selenium Grid to be ready
        run: |
          echo "Waiting for Selenium Grid to initialize..."
          # Даем Selenium Grid время на инициализацию
          sleep 30
          echo "Checking Docker containers status:"
          docker ps
          echo "Continuing with tests..."

      - name: Run UI Tests
        id: run-ui-tests
        run: ./gradlew test --tests com.webqa.tests.ui.LoginTest --tests com.webqa.tests.ui.SignUpUITest -Dremote=true
        #continue-on-error: true

      - name: Upload Build Directory
        if: failure() && steps.run-ui-tests.outcome != 'success'
        uses: actions/upload-artifact@v4
        with:
          name: ui-build-directory
          path: build

      - name: Stop Selenium Grid
        if: always()
        run: docker compose down
